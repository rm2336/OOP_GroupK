/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tiernan;

import javax.swing.*;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import groupk_final.MainMenu;

public class MainGlossaryForm extends javax.swing.JFrame {
    private GlossaryManager glossaryManager;
    private DefaultListModel<GlossaryTerm> listModel;
    private MainMenu mainMenu;
    
    public MainGlossaryForm() {
        initComponents();
        setupInitialState();
    }
    
    public void setMainMenu(MainMenu menu) {
        mainMenu = menu;
    }

    private void setupInitialState() {
        glossaryManager = new GlossaryManager();
        listModel = new DefaultListModel<>();
        termsList.setModel(listModel);
        
        GlossaryTerm testTerm = new GlossaryTerm("Test", "Test Definition", "Access to Education", "", "");
        listModel.addElement(testTerm);
        
        updateTermsList(glossaryManager.getAllTerms());
        setupEventListeners();
    }
    
    private void updateTermsList(ArrayList<GlossaryTerm> terms) {
        System.out.println("Updating list with " + terms.size() + " terms");
        listModel.clear();
        for (GlossaryTerm term : terms) {
            listModel.addElement(term);
        }
    }
    
    private void setupEventListeners() {
        searchButton.addActionListener(e -> {
    String searchTerm = searchField.getText().trim();
    String category = categoryComboBox.getSelectedItem().toString();
    
    ArrayList<GlossaryTerm> results;
    
    if (category.equals("All Categories")) {
        System.out.println("Searching all categories for: '" + searchTerm + "'");
        results = glossaryManager.searchByTerm(searchTerm);
    } else {
        System.out.println("Searching category '" + category + "' for: '" + searchTerm + "'");
        results = glossaryManager.searchByCategory(category);
    }
    
    // Clear and update list model
    listModel.removeAllElements();
    
    // Add matching results
    System.out.println("Adding " + results.size() + " results to list");
    for (GlossaryTerm term : results) {
        System.out.println("Adding: " + term.getTerm());
        listModel.addElement(term);
    }
});
        
        addButton.addActionListener(e -> {
            String term = JOptionPane.showInputDialog("Enter new term");
            if (term != null && !term.trim().isEmpty()) {
                String definition = JOptionPane.showInputDialog("Enter definition:");
                String category = categoryComboBox.getSelectedItem().toString();
                
                GlossaryTerm newTerm = new GlossaryTerm(term, definition, category, "", "");
                glossaryManager.addTerm(newTerm);
                System.out.println("Added term: " + term);
                updateTermsList(glossaryManager.getAllTerms());
            }
        });
        
        deleteButton.addActionListener(e -> {
            GlossaryTerm selectedTerm = termsList.getSelectedValue();
            if (selectedTerm != null) {
                int confirm = JOptionPane.showConfirmDialog(this,
                    "Delete " + selectedTerm.getTerm() + "?",
                    "Confirm Delete",
                    JOptionPane.YES_NO_OPTION);
                
                if (confirm == JOptionPane.YES_OPTION) {
                    glossaryManager.removeTerm(selectedTerm);
                    updateTermsList(glossaryManager.getAllTerms());
                }
            }
        });
        
        termsList.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                GlossaryTerm selectedTerm = termsList.getSelectedValue();
                if (selectedTerm != null) {
                    detailsArea.setText(
                        "Term: " + selectedTerm.getTerm() + "\n\n" +
                        "Definition: " + selectedTerm.getDefinition() + "\n\n" +
                        "Category: " + selectedTerm.getCategory() + "\n\n" +
                        "Example: " + selectedTerm.getExample() + "\n\n" +
                        "Related SDG Target: " + selectedTerm.getRelatedSDGTarget()
                    );
                } else {
                    detailsArea.setText("");
                }
                
            }
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchPanel = new javax.swing.JPanel();
        SearchLBL = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        categoryComboBox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        sortButton = new javax.swing.JButton();
        ContentPanel = new javax.swing.JPanel();
        detailsScrollPane = new javax.swing.JScrollPane();
        termsList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        detailsArea = new javax.swing.JTextArea();
        ButtonPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SearchLBL.setText("Search");
        SearchPanel.add(SearchLBL);

        searchField.setText("SearchField");
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        SearchPanel.add(searchField);

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " All Categories", "    Access to Education", "    Quality Learning", "    Teacher Training", "    Education Facilities", "    Scholarships", "    Sustainable Development" }));
        SearchPanel.add(categoryComboBox);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        SearchPanel.add(searchButton);

        sortButton.setText("Sort A-Z");
        SearchPanel.add(sortButton);

        detailsScrollPane.setViewportView(termsList);

        detailsArea.setEditable(false);
        detailsArea.setColumns(20);
        detailsArea.setLineWrap(true);
        detailsArea.setRows(5);
        detailsArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(detailsArea);

        javax.swing.GroupLayout ContentPanelLayout = new javax.swing.GroupLayout(ContentPanel);
        ContentPanel.setLayout(ContentPanelLayout);
        ContentPanelLayout.setHorizontalGroup(
            ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detailsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
        );
        ContentPanelLayout.setVerticalGroup(
            ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(detailsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
        );

        addButton.setText("Add Term");

        editButton.setText("Edit Term");

        deleteButton.setText("Delete Term");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
        ButtonPanel.setLayout(ButtonPanelLayout);
        ButtonPanelLayout.setHorizontalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(addButton)
                .addGap(39, 39, 39)
                .addComponent(editButton)
                .addGap(32, 32, 32)
                .addComponent(deleteButton)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        ButtonPanelLayout.setVerticalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(editButton)
                    .addComponent(deleteButton)
                    .addComponent(jButton1))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ContentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        mainMenu.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGlossaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGlossaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGlossaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGlossaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGlossaryForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JPanel ContentPanel;
    private javax.swing.JLabel SearchLBL;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextArea detailsArea;
    private javax.swing.JScrollPane detailsScrollPane;
    private javax.swing.JButton editButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton sortButton;
    private javax.swing.JList<GlossaryTerm> termsList;
    // End of variables declaration//GEN-END:variables
}
